name: Build ROLA

on:
  push:
    branches: ['**']
  workflow_dispatch:

jobs:
  snyk_scan_monitor:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
      deployments: write
    steps:
      - uses: RDXWorks-actions/checkout@main
      - uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: ${{ secrets.AWS_ROLE_NAME_SNYK_SECRET }}
          app_name: 'rola'
          step_name: 'snyk-monitor'
          secret_prefix: 'SNYK'
          secret_name: ${{ secrets.AWS_SECRET_NAME_SNYK }}
          parse_json: true

      - name: Install Snyk cli
        run: |
          npm install snyk@1.1292.1 -g
          snyk auth "${{ env.SNYK_TOKEN }}"

      # Scan Node/TypeScript Project
      - name: Install Node dependencies
        run: |
          cd typescript
          npm install
      - name: Snyk test for Node/TypeScript
        run: |
          cd typescript
          snyk test --file=package.json
      - name: Snyk monitor for Node/TypeScript
        run: |
          cd typescript
          snyk monitor --file=package.json --org="${{ env.SNYK_PROJECTS_ORG_ID }}" --target-reference="${{ github.ref_name }}"

      # Scan Python Project
      - name: Set up Python
        uses: RDXWorks-actions/setup-python@main
        with:
          python-version: "3.8"
      - name: Install Python dependencies
        run: |
          cd python
          pip install --upgrade pip
          pip install -r requirements.txt
      - name: Snyk test for Python
        run: |
          cd python
          snyk test --file=requirements.txt
      - name: Snyk monitor for Python
        run: |
          cd python
          snyk monitor --file=requirements.txt --org="${{ env.SNYK_PROJECTS_ORG_ID }}" --target-reference="${{ github.ref_name }}"


  # test_and_lint_typescript:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./typescript

  #   steps:
  #     - uses: RDXWorks-actions/checkout@main
  #     - name: Use Node.js
  #       uses: RDXWorks-actions/setup-node@main
  #       with:
  #         node-version: '18.x'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Running lint
  #       run: npm run lint

  #     - name: Running tests
  #       run: npm run test

  #     - name: Build
  #       run: npm run build

  #     - name: Prepare artifact
  #       run: rm -rf node_modules e2e src sandbox

  #     - uses: RDXWorks-actions/upload-artifact@main
  #       with:
  #         name: typescript-rola.${{ github.sha }}
  #         path: .

  # test_and_lint_python:
  #   defaults:
  #     run:
  #       working-directory: ./python
  #   runs-on: ubuntu-latest
  #   container:
  #     image: python:3.8

  #   steps:
  #     - uses: RDXWorks-actions/checkout@main

  #     - name: Install dependencies
  #       run: |  
  #         pip install -r requirements.txt

  #     - uses: RDXWorks-actions/black@stable
  #       with:
  #         options: "--check --verbose"
  #         src: "."

  #     - name: Static type check
  #       run: |
  #         pip install mypy
  #         mypy rola --ignore-missing-imports --install-types --non-interactive 

  #     - name: Running tests
  #       run: |
  #         pip install pytest
  #         pytest tests/

