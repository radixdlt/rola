name: Build ROLA

on:
  push:
    branches: ['**']
  workflow_dispatch:

jobs:
  snyk_scan_deps_licences:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
      deployments: write
    steps:
      - uses: RDXWorks-actions/checkout@main
      - uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: ${{ secrets.AWS_ROLE_NAME_SNYK_SECRET }}
          app_name: 'rola'
          step_name: 'snyk-scan-deps-licenses'
          secret_prefix: 'SNYK'
          secret_name: ${{ secrets.AWS_SECRET_NAME_SNYK }}
          parse_json: true
      - name: Run Snyk to check for deps vulnerabilities
        uses: RDXWorks-actions/snyk-actions/node@master
        with:
          args: --all-projects --org=${{ env.SNYK_PROJECTS_ORG_ID }} --severity-threshold=critical

  snyk_scan_code:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
      deployments: write
    steps:
      - uses: RDXWorks-actions/checkout@main
      - uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: ${{ secrets.AWS_ROLE_NAME_SNYK_SECRET }}
          app_name: 'rola'
          step_name: 'snyk-scan-code'
          secret_prefix: 'SNYK'
          secret_name: ${{ secrets.AWS_SECRET_NAME_SNYK }}
          parse_json: true
      - name: Run Snyk to check for code vulnerabilities
        uses: RDXWorks-actions/snyk-actions/node@master
        with:
          args: --all-projects --org=${{ env.SNYK_PROJECTS_ORG_ID }} --severity-threshold=high
          command: code test

  snyk_sbom:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      pull-requests: read
      contents: read
      deployments: write
    steps:
      - uses: RDXWorks-actions/checkout@main
      - uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: ${{ secrets.AWS_ROLE_NAME_SNYK_SECRET }}
          app_name: 'rola'
          step_name: 'snyk-sbom'
          secret_prefix: 'SNYK'
          secret_name: ${{ secrets.AWS_SECRET_NAME_SNYK }}
          parse_json: true
      - name: Generate SBOM # check SBOM can be generated but nothing is done with it
        uses: RDXWorks-actions/snyk-actions/node@master
        with:
          args: --all-projects --org=${{ env.SNYK_PROJECTS_ORG_ID }} --format=cyclonedx1.4+json --json-file-output sbom.json -d
          command: sbom

  # test_and_lint_typescript:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./typescript

  #   steps:
  #     - uses: RDXWorks-actions/checkout@main
  #     - name: Use Node.js
  #       uses: RDXWorks-actions/setup-node@main
  #       with:
  #         node-version: '18.x'

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Running lint
  #       run: npm run lint

  #     - name: Running tests
  #       run: npm run test

  #     - name: Build
  #       run: npm run build

  #     - name: Prepare artifact
  #       run: rm -rf node_modules e2e src sandbox

  #     - uses: RDXWorks-actions/upload-artifact@main
  #       with:
  #         name: typescript-rola.${{ github.sha }}
  #         path: .

  # test_and_lint_python:
  #   defaults:
  #     run:
  #       working-directory: ./python
  #   runs-on: ubuntu-latest
  #   container:
  #     image: python:3.8

  #   steps:
  #     - uses: RDXWorks-actions/checkout@main

  #     - name: Install dependencies
  #       run: |  
  #         pip install -r requirements.txt

  #     - uses: RDXWorks-actions/black@stable
  #       with:
  #         options: "--check --verbose"
  #         src: "."

  #     - name: Static type check
  #       run: |
  #         pip install mypy
  #         mypy rola --ignore-missing-imports --install-types --non-interactive 

  #     - name: Running tests
  #       run: |
  #         pip install pytest
  #         pytest tests/

  snyk_monitor:
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    # needs:
    #   - test_and_lint_typescript
    #   - test_and_lint_python
    permissions:
      id-token: write
      pull-requests: read
      contents: read
      deployments: write
    steps:
      - uses: RDXWorks-actions/checkout@main
      - uses: radixdlt/public-iac-resuable-artifacts/fetch-secrets@main
        with:
          role_name: ${{ secrets.AWS_ROLE_NAME_SNYK_SECRET }}
          app_name: 'rola'
          step_name: 'snyk-monitor'
          secret_prefix: 'SNYK'
          secret_name: ${{ secrets.AWS_SECRET_NAME_SNYK }}
          parse_json: true
      - name: Enable Snyk online monitoring to check for vulnerabilities
        uses: RDXWorks-actions/snyk-actions/node@master
        with:
          args: --all-projects --org=${{ env.SNYK_PROJECTS_ORG_ID }} --target-reference=${{ github.ref_name }} -d
          command: monitor
